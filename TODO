// Ajouter des default constructor sur toute les classes qui n'en ont pas

// Assignement in copy constructor drawbacks:
// https://stackoverflow.com/questions/1457842/is-this-good-code-copy-constructor-and-assignment-operator
// (voir les liens dans This question already has answers here, a noter que le
//  assignment operator n'utilise pas `const Class& other`, est-ce important?)

// Canonical form
// ----- Animal.h --------------------------------------------------------------

#pragma once
#include "Animal.h"

class Dog : public Animal
{
public:
	Dog();
	Dog(const Dog &other);
	Dog &operator=(const Dog &other);
	virtual ~Dog();
};

// ----- Animal.cpp ------------------------------------------------------------

Animal::Animal()
{
	type = "";
}

Animal::Animal(const Animal &other)
{
	*this = other;
}

Animal &Animal::operator=(const Animal &other)
{
	if (this == &other)
		return *this;
	type = other.type;
	return *this;
}

Animal::~Animal() {}

// ----- Dog.cpp ---------------------------------------------------------------

Dog::Dog() : Animal()
{
	type = "Dog";
}

Dog::Dog(const Dog &other) : Animal(other)
{
	*this = other;
}

Dog &Dog::operator=(const Dog &other)
{
	if (this == &other)
		return *this;
	Animal::operator=(other);
	return *this;
}

Dog::~Dog() {}
